싱글톤 패턴 (singleton)

메모리 전체에 같은 타입의 객체를 1개만 생성 !!

이게 디폴트 이다.

그래서 이렇게 안하려면 프로토타입으로 명시해주기.

근데 웹개발에서 프로토타입으로 쓰는일 없다고 보면 될듯 ?

-----------------------------

applicationContext.xml

스프링 컨테이너 ~~~~~~~~~~ 관련 설정 파일

(스프링 관련 설정 파일) 

--------------------------

의존주입

DI == 의존성주입

1. 생성자 주입
2. 세터 주입
3. @Autowired 

--------------------------

스프링 프레임워크

IoC와 AOP를 지원하는 경량의 프레임워크

new를 대신해주니까 결합도를 낮춰준다.
== 응집도를 높여준다.

== 낮은 결합도, 높은 응집도, 유지보수 용이

그래서 스프링 프레임워크를 기반으로 해서 
여러 프레임워크가 생성됬다.
얘를 잘 이해하면 나머지 프레임워크 구조 파악도 쉬움

--------------------------

★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★

<bean> 으로 객체화 하는건 (.xml)

자주 변경되는 애들을 상대로 한다.

근데 DAO나 VO를 객체화 하는건

자주 변경 되지 않고 거의 고정이기 때문에

어노테이션을 사용해서 객체화 한다. (@)

@Repository("객체명")
=> @Component를 "상속" 받은 어노테이션 이다.

스프링 컨테이너가 @Repository 가 있으면
자동으로 아하 얘는 Model 파트 객체화에 
쓰이는거네 ? 하고 인지 하는 기능이 있다.

그래서 스프링 컨테이너가 메모리를 관리하기에 유리 해진다.
=> 속도 향상.

사실 그리고 ("객체명") 이것도 필요 없긴 하다.
왜 ? 
스프링 컨테이너가 @Repository를 모델꺼라고 인지 해서 !

그래도 일단 적어주도록 하자..

그리고, @어노테이션명
이걸 보고, 아하 모델꺼, 아하 컨트롤꺼
이런식으로 어노테이션명에 따라 다 구분이 가능하기에

가독성이 올라 간다 !








