스프링 프레임워크
 == IoC와 AOP를 지원하는 경량의 프레임워크
	↓
	new를 프레임워크가 해준다!
	"컨테이너"
	객체 생성 및 관리(메서드 호출)
	결합도가 낮아짐

1) 결합도가 높은 코드
2) 결합도를 낮추기위해 다형성(인터페이스)을 활용함
3) 팩토리 패턴

스프링 "컨테이너"에게 new를 부탁
	+ .xml(설정파일)
 1) .xml <bean>
 2) @

POJO를 new -> 스프링 컨테이너
		applicationContext.xml
		DispatcherServlet-servlet.xml
Servlet을 new -> 서블릿 컨테이너(톰캣,서버,웹 서버)
		web.xml

1) 사용자(Client,브라우저)가 .do 요청
2) DS가 해당 요청을 처리함
3) HM에 의해 요청에 맞는 C 객체가 반환됨
4) C 객체는 .handleRequest() 메서드 수행
5) 메서드 수행 결과로 String 반환
6) VR가 VIEW를 제공(응답)

★ Command 객체







